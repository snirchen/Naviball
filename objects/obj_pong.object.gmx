<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>shaman_one_ball_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>trail_init();
////////////////////////////////////////////////////////
enum  dying_state{
DS_IDLE                  = 0,
LOAD_TIME_BEFORE_DYING   = 1,
WAIT_FOR_DYING           = 2,
DIE                      = 3,
}
global.die_state         = dying_state.DS_IDLE;
/////////////////////////////////////////////////////////////////////////////////////
image_speed = 0;
image_index = 1;
/////////////////////////////////////////////////////////////////////////////////////
image_alpha = 1; 
global.die = false;
global.powerup_active[e_powerup_ID.SHIELD] = false;
global.f_took_a_gem = 0;
global.CaughtGems = 0;
global.can_play_second_chance = true;
z = 0;
global.blinking = false;
//////////////////////////////////////////////////////////////////////////////////////
    
randomize();

global.pong_speed = MIN_PONG_SPEED;

hspeed = choose (-global.pong_speed,global.pong_speed);
vspeed = choose (-global.pong_speed,global.pong_speed);

//////////////////////////////////////////////////////////////////////////////////

SetPongSkin();

//////////////////////////////////////////////////////////////////////////////////
global.watched_all = true;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.point_piano_level_sound = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.blinking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index++;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == game_1_room)
{
    StateMachine();
    if(global.die == false)
    {
        trail_calculate(32);    
    }
    ////////////////////////////////////////////////////////////////////////////////
    if ((place_meeting(x,y,obj_evilball)
    || place_meeting (x,y,obj_spikes)
    || place_meeting (x,y,obj_spikes_left)
    || place_meeting (x,y,obj_spikes_right) 
    || place_meeting (x,y,obj_spikes_up)
    || global.watched_all == false) 
    &amp;&amp; global.die_state == dying_state.DS_IDLE)
    &amp;&amp; global.die == false
    &amp;&amp; global.spikes_harmful == true
    &amp;&amp; (global.powerup_active[e_powerup_ID.SHIELD] == false)
    {
        global.die = true;
        real_time_score_obj.image_alpha = -4.6;
        global.die_state = dying_state.LOAD_TIME_BEFORE_DYING;
        //image_index = 0;
        instance_create(0,0,effect_shake);
        instance_create(x,y,obj_death);
        effect_create_below(ef_ring,x,y,3,c_white);
        instance_create(0,0,white_screen_obj); 
        
        if (ex_patch_device_vibration_supported()) 
        {
            ex_patch_device_vibrate(500); // time argument is not supported for iOS (vibration effect is always 2s)
        } 

        if (global.sound == 1)
        {
            audio_play_sound(ball_pop_die_sound, 10, false);
            audio_play_sound(die_sound, 10, false);
        }
            
        global.powerup_active[e_powerup_ID.MAGNET] = false;
        global.powerup_life_state[e_powerup_ID.MAGNET] = e_powerup_life_state.PL_IDLE;

        global.powerup_active[e_powerup_ID.SHIELD] = false;
        global.powerup_life_state[e_powerup_ID.SHIELD] = e_powerup_life_state.PL_IDLE;
    }
//////////////////////////////////////////////////////////////////////
    if(global.f_took_a_gem = 1)
    {
        ChangePongSpeed();
        global.f_took_a_gem = 0;
    }
//////////////////////////////////////////////////////////////////////
    if (hspeed = 0)
    {
        image_angle += 0;
    }
    else if (hspeed &lt; 0)
    {
        image_angle += 1;
    }
    else
    {
        image_angle -= 1;
    }
//////////////////////////////////////////////////////////////////////
}
else 
{
    hspeed = 0;
    z += 0.07;
    vspeed = 1.5 * sin(z);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_point">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="right_left_wall_bouncer_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed *= -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="up_down_wall_bouncer_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed *= -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>effect_create_above(ef_spark,x, y, 2, make_color_rgb(200,200,125));
//instance_create(0,0,effect_little_shake);

if(global.blinking == false)
{
    image_index--;
    global.blinking = true;
    alarm[0] = 11;
    alarm[1] = 50;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//effect_create_above(ef_spark,x, y, 2, make_color_rgb(200,200,125));
//instance_create(0,0,effect_little_shake);

if(global.blinking == false)
{
    image_index--;
    global.blinking = true;
    alarm[0] = 11;
    alarm[1] = 50;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.die == false)
{
draw_trail_ext(120,make_color_rgb(200, 200, 200),-1,1,0.8);
//draw_trail_ext(70,c_aqua,-1,1,0.5);
//draw_trail_ext(70,c_orange,-1,1,0.5);
//draw_trail_ext(70,c_lime,-1,1,0.5);
//draw_trail_ext(70,c_ltgray,-1,1,0.5);
//draw_trail_ext(70,c_yellow,-1,1,0.5);
draw_self();
}
/////////////////////////////////////////////////////////////////////////////////////
/*if (global.die == false)
{
d3d_set_fog(true,$5fad1b,0,0);
draw_sprite(sprite_index,image_index,x,y);
d3d_set_fog(false,c_black,0,0);
}
*/
/////////////////////////////////////////////////////////////////////////////////////
if (global.powerup_active[e_powerup_ID.SHIELD] == true)
{
image_alpha = 0.5;
}
else
{
image_alpha = 1;
}
////////////////////////////////////////////////////////////////////////////////////////

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
